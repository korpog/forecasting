holidays |>
gg_subseries(Trips) +
labs(y = "Overnight trips ('000)",
title = "Australian domestic holidays")
vic_elec |>
filter(year(Time) == 2014) |>
ggplot(aes(x = Temperature, y = Demand)) +
geom_point() +
labs(x = "Temperature (degrees Celsius)",
y = "Electricity demand (GW)")
visitors |>
pivot_wider(values_from=Trips, names_from=State) |>
GGally::ggpairs(columns = 2:9)
visitors <- tourism |>
group_by(State) |>
summarise(Trips = sum(Trips))
visitors |>
ggplot(aes(x = Quarter, y = Trips)) +
geom_line() +
facet_grid(vars(State), scales = "free_y") +
labs(title = "Australian domestic tourism",
y= "Overnight trips ('000)")
visitors |>
pivot_wider(values_from=Trips, names_from=State) |>
GGally::ggpairs(columns = 2:9)
recent_production <- aus_production |>
filter(year(Quarter) >= 2000)
library(fpp3)
recent_production <- aus_production |>
filter(year(Quarter) >= 2000)
recent_production |>
gg_lag(Beer, geom = "point") +
labs(x = "lag(Beer, k)")
# 2.8
recent_production |> ACF(Beer, lag_max = 9)
recent_production |>
ACF(Beer) |>
autoplot() + labs(title="Australian beer production")
a10 |>
ACF(Cost, lag_max = 48) |>
autoplot() +
labs(title="Australian antidiabetic drug sales")
set.seed(30)
y <- tsibble(sample = 1:50, wn = rnorm(50), index = sample)
y |> autoplot(wn) + labs(title = "White noise", y = "")
y |>
ACF(wn) |>
autoplot() + labs(title = "White noise")
# 2.10
aus_production$Bricks
# 2.10
?aus_production$Bricks
# 2.10
?aus_production
# 2.10
aus_production
?pelt
?gafa_stock
?vic_elec
bricks <- aus_production |>
select(Bricks)
bricks <- autoplot()
autoplot(bricks)
autoplot(bricks) + labs(title = "Bricks")
lynx <- pelt |>
select(Lynx)
autoplot(lynx) + labs(title = "Lynx")
bricks <- aus_production |>
select(Bricks)
autoplot(bricks, Bricks) + labs(title = "Bricks")
autoplot(aus_production, Bricks) + labs(title = "Bricks")
autoplot(pelt, Lynx) + labs(title = "Lynx")
autoplot(gafa_stock, Close) + labs(title = "Close")
autoplot(vic_elec, Demand) + labs(title = "Electricity Demand", x = "Date", y = "Electricity [MWh]")
autoplot(gafa_stock, Close) + labs(title = "Close")
install.packages("seasonal", dependencies = FALSE)
install.packages("x13binary", dependencies = FALSE)
install.packages("seasonal")
x11_dcmp <- us_retail_employment |>
model(x11 = X_13ARIMA_SEATS(Employed ~ x11())) |>
components()
# 3.5 Methods used by official statistics agencies
library(seasonal)
x11_dcmp <- us_retail_employment |>
model(x11 = X_13ARIMA_SEATS(Employed ~ x11())) |>
components()
us_retail_employment <- us_employment |>
filter(year(Month) >= 1990, Title == "Retail Trade") |>
select(-Series_ID)
us_retail_employment <- us_employment |>
filter(year(Month) >= 1990, Title == "Retail Trade") |>
select(-Series_ID)
library(fpp3)
setwd("/home/korpog/Documents/prog3/forecasting")
x11_dcmp <- us_retail_employment |>
model(x11 = X_13ARIMA_SEATS(Employed ~ x11())) |>
components()
us_retail_employment <- us_employment |>
filter(year(Month) >= 1990, Title == "Retail Trade") |>
select(-Series_ID)
autoplot(us_retail_employment, Employed) +
labs(
y = "Persons (thousands)",
title = "Total employment in US retail"
)
x11_dcmp <- us_retail_employment |>
model(x11 = X_13ARIMA_SEATS(Employed ~ x11())) |>
components()
autoplot(x11_dcmp) +
labs(title =
"Decomposition of total US retail employment using X-11.")
x11_dcmp |>
ggplot(aes(x = Month)) +
geom_line(aes(y = Employed, colour = "Data")) +
geom_line(aes(y = season_adjust,
colour = "Seasonally Adjusted")) +
geom_line(aes(y = trend, colour = "Trend")) +
labs(y = "Persons (thousands)",
title = "Total employment in US retail") +
scale_colour_manual(
values = c("gray", "#0072B2", "#D55E00"),
breaks = c("Data", "Seasonally Adjusted", "Trend")
)
x11_dcmp |>
gg_subseries(seasonal)
seats_dcmp <- us_retail_employment |>
model(seats = X_13ARIMA_SEATS(Employed ~ seats())) |>
components()
autoplot(seats_dcmp) +
labs(title =
"Decomposition of total US retail employment using SEATS")
